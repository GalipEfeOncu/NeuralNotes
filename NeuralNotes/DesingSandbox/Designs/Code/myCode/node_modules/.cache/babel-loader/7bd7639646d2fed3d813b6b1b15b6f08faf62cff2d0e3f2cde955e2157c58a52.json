{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\neuralnotes\\\\src\\\\contexts\\\\CalendarContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { addDays, subDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarContext = /*#__PURE__*/createContext();\nexport const useCalendar = () => {\n  _s();\n  return useContext(CalendarContext);\n};\n_s(useCalendar, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CalendarProvider = ({\n  children\n}) => {\n  _s2();\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMode, setModalMode] = useState('add'); // 'add', 'edit', 'view'\n\n  // Load events from localStorage on initial render\n  useEffect(() => {\n    const savedEvents = localStorage.getItem('neuralnotesEvents');\n    if (savedEvents) {\n      // Convert string dates back to Date objects\n      const parsedEvents = JSON.parse(savedEvents).map(event => ({\n        ...event,\n        start: new Date(event.start),\n        end: new Date(event.end)\n      }));\n      setEvents(parsedEvents);\n    } else {\n      // Create some sample events if none exist\n      const today = new Date();\n      const sampleEvents = [{\n        id: '1',\n        title: 'Project Kickoff',\n        start: new Date(today.getFullYear(), today.getMonth(), today.getDate(), 10, 0),\n        end: new Date(today.getFullYear(), today.getMonth(), today.getDate(), 11, 30),\n        description: 'Initial meeting to discuss project goals and timeline',\n        location: 'Conference Room A',\n        color: '#4CAF50' // green\n      }, {\n        id: '2',\n        title: 'Team Standup',\n        start: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 9, 0), 1),\n        end: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 9, 30), 1),\n        description: 'Daily team standup meeting',\n        location: 'Zoom',\n        color: '#2196F3' // blue\n      }, {\n        id: '3',\n        title: 'Client Presentation',\n        start: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 14, 0), 3),\n        end: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 15, 30), 3),\n        description: 'Present project progress to the client',\n        location: 'Client Office',\n        color: '#FFC107' // amber\n      }, {\n        id: '4',\n        title: 'Research Time',\n        start: subDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 13, 0), 2),\n        end: subDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 15, 0), 2),\n        description: 'Dedicated time for research and learning',\n        location: 'Home Office',\n        color: '#9C27B0' // purple\n      }];\n      setEvents(sampleEvents);\n      localStorage.setItem('neuralnotesEvents', JSON.stringify(sampleEvents));\n    }\n  }, []);\n\n  // Save events to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('neuralnotesEvents', JSON.stringify(events));\n  }, [events]);\n\n  // Add a new event\n  const addEvent = newEvent => {\n    const eventWithId = {\n      ...newEvent,\n      id: Date.now().toString() // Simple ID generation\n    };\n    setEvents([...events, eventWithId]);\n    return eventWithId;\n  };\n\n  // Update an existing event\n  const updateEvent = updatedEvent => {\n    const updatedEvents = events.map(event => event.id === updatedEvent.id ? updatedEvent : event);\n    setEvents(updatedEvents);\n  };\n\n  // Delete an event\n  const deleteEvent = eventId => {\n    setEvents(events.filter(event => event.id !== eventId));\n  };\n\n  // Open modal to add a new event\n  const openAddModal = (start, end) => {\n    setSelectedEvent({\n      title: '',\n      start: start || new Date(),\n      end: end || new Date(new Date().setHours(new Date().getHours() + 1)),\n      description: '',\n      location: '',\n      color: '#2196F3' // Default blue\n    });\n    setModalMode('add');\n    setIsModalOpen(true);\n  };\n\n  // Open modal to edit an event\n  const openEditModal = event => {\n    setSelectedEvent(event);\n    setModalMode('edit');\n    setIsModalOpen(true);\n  };\n\n  // Open modal to view event details\n  const openViewModal = event => {\n    setSelectedEvent(event);\n    setModalMode('view');\n    setIsModalOpen(true);\n  };\n\n  // Close the modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedEvent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(CalendarContext.Provider, {\n    value: {\n      events,\n      selectedEvent,\n      isModalOpen,\n      modalMode,\n      addEvent,\n      updateEvent,\n      deleteEvent,\n      openAddModal,\n      openEditModal,\n      openViewModal,\n      closeModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s2(CalendarProvider, \"vgjQTAdzicYU8bF3x5xZpy2jyco=\");\n_c = CalendarProvider;\nexport default CalendarContext;\nvar _c;\n$RefreshReg$(_c, \"CalendarProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","addDays","subDays","jsxDEV","_jsxDEV","CalendarContext","useCalendar","_s","CalendarProvider","children","_s2","events","setEvents","selectedEvent","setSelectedEvent","isModalOpen","setIsModalOpen","modalMode","setModalMode","savedEvents","localStorage","getItem","parsedEvents","JSON","parse","map","event","start","Date","end","today","sampleEvents","id","title","getFullYear","getMonth","getDate","description","location","color","setItem","stringify","addEvent","newEvent","eventWithId","now","toString","updateEvent","updatedEvent","updatedEvents","deleteEvent","eventId","filter","openAddModal","setHours","getHours","openEditModal","openViewModal","closeModal","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/neuralnotes/src/contexts/CalendarContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { addDays, subDays } from 'date-fns';\r\n\r\nconst CalendarContext = createContext();\r\n\r\nexport const useCalendar = () => useContext(CalendarContext);\r\n\r\nexport const CalendarProvider = ({ children }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalMode, setModalMode] = useState('add'); // 'add', 'edit', 'view'\r\n\r\n  // Load events from localStorage on initial render\r\n  useEffect(() => {\r\n    const savedEvents = localStorage.getItem('neuralnotesEvents');\r\n    if (savedEvents) {\r\n      // Convert string dates back to Date objects\r\n      const parsedEvents = JSON.parse(savedEvents).map(event => ({\r\n        ...event,\r\n        start: new Date(event.start),\r\n        end: new Date(event.end)\r\n      }));\r\n      setEvents(parsedEvents);\r\n    } else {\r\n      // Create some sample events if none exist\r\n      const today = new Date();\r\n      const sampleEvents = [\r\n        {\r\n          id: '1',\r\n          title: 'Project Kickoff',\r\n          start: new Date(today.getFullYear(), today.getMonth(), today.getDate(), 10, 0),\r\n          end: new Date(today.getFullYear(), today.getMonth(), today.getDate(), 11, 30),\r\n          description: 'Initial meeting to discuss project goals and timeline',\r\n          location: 'Conference Room A',\r\n          color: '#4CAF50' // green\r\n        },\r\n        {\r\n          id: '2',\r\n          title: 'Team Standup',\r\n          start: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 9, 0), 1),\r\n          end: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 9, 30), 1),\r\n          description: 'Daily team standup meeting',\r\n          location: 'Zoom',\r\n          color: '#2196F3' // blue\r\n        },\r\n        {\r\n          id: '3',\r\n          title: 'Client Presentation',\r\n          start: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 14, 0), 3),\r\n          end: addDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 15, 30), 3),\r\n          description: 'Present project progress to the client',\r\n          location: 'Client Office',\r\n          color: '#FFC107' // amber\r\n        },\r\n        {\r\n          id: '4',\r\n          title: 'Research Time',\r\n          start: subDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 13, 0), 2),\r\n          end: subDays(new Date(today.getFullYear(), today.getMonth(), today.getDate(), 15, 0), 2),\r\n          description: 'Dedicated time for research and learning',\r\n          location: 'Home Office',\r\n          color: '#9C27B0' // purple\r\n        }\r\n      ];\r\n      setEvents(sampleEvents);\r\n      localStorage.setItem('neuralnotesEvents', JSON.stringify(sampleEvents));\r\n    }\r\n  }, []);\r\n\r\n  // Save events to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('neuralnotesEvents', JSON.stringify(events));\r\n  }, [events]);\r\n\r\n  // Add a new event\r\n  const addEvent = (newEvent) => {\r\n    const eventWithId = {\r\n      ...newEvent,\r\n      id: Date.now().toString(), // Simple ID generation\r\n    };\r\n    setEvents([...events, eventWithId]);\r\n    return eventWithId;\r\n  };\r\n\r\n  // Update an existing event\r\n  const updateEvent = (updatedEvent) => {\r\n    const updatedEvents = events.map(event => \r\n      event.id === updatedEvent.id ? updatedEvent : event\r\n    );\r\n    setEvents(updatedEvents);\r\n  };\r\n\r\n  // Delete an event\r\n  const deleteEvent = (eventId) => {\r\n    setEvents(events.filter(event => event.id !== eventId));\r\n  };\r\n\r\n  // Open modal to add a new event\r\n  const openAddModal = (start, end) => {\r\n    setSelectedEvent({\r\n      title: '',\r\n      start: start || new Date(),\r\n      end: end || new Date(new Date().setHours(new Date().getHours() + 1)),\r\n      description: '',\r\n      location: '',\r\n      color: '#2196F3' // Default blue\r\n    });\r\n    setModalMode('add');\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Open modal to edit an event\r\n  const openEditModal = (event) => {\r\n    setSelectedEvent(event);\r\n    setModalMode('edit');\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Open modal to view event details\r\n  const openViewModal = (event) => {\r\n    setSelectedEvent(event);\r\n    setModalMode('view');\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close the modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  return (\r\n    <CalendarContext.Provider value={{\r\n      events,\r\n      selectedEvent,\r\n      isModalOpen,\r\n      modalMode,\r\n      addEvent,\r\n      updateEvent,\r\n      deleteEvent,\r\n      openAddModal,\r\n      openEditModal,\r\n      openViewModal,\r\n      closeModal\r\n    }}>\r\n      {children}\r\n    </CalendarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CalendarContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}