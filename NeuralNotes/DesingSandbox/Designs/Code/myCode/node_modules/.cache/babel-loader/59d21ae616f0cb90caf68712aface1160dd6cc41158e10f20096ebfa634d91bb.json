{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\neuralnotes\\\\src\\\\contexts\\\\TodoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\nexport const useTodo = () => {\n  _s();\n  return useContext(TodoContext);\n};\n_s(useTodo, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const TodoProvider = ({\n  children\n}) => {\n  _s2();\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all'); // all, active, completed\n  const [sort, setSort] = useState('date'); // date, priority, alphabetical\n\n  // Load todos from localStorage on initial render\n  useEffect(() => {\n    const storedTodos = localStorage.getItem('neuralnotes_todos');\n    if (storedTodos) {\n      setTodos(JSON.parse(storedTodos));\n    } else {\n      // Sample todos for first-time users\n      setTodos([{\n        id: '1',\n        text: 'Welcome to NeuralNotes Todo List',\n        completed: false,\n        priority: 'high',\n        dueDate: new Date(Date.now() + 86400000).toISOString(),\n        // tomorrow\n        createdAt: new Date().toISOString()\n      }, {\n        id: '2',\n        text: 'Try adding a new task',\n        completed: false,\n        priority: 'medium',\n        dueDate: new Date(Date.now() + 172800000).toISOString(),\n        // day after tomorrow\n        createdAt: new Date().toISOString()\n      }, {\n        id: '3',\n        text: 'Mark tasks as complete',\n        completed: true,\n        priority: 'low',\n        dueDate: null,\n        createdAt: new Date().toISOString()\n      }]);\n    }\n  }, []);\n\n  // Save todos to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('neuralnotes_todos', JSON.stringify(todos));\n  }, [todos]);\n\n  // Add a new todo\n  const addTodo = (text, priority = 'medium', dueDate = null) => {\n    const newTodo = {\n      id: Date.now().toString(),\n      text,\n      completed: false,\n      priority,\n      dueDate,\n      createdAt: new Date().toISOString()\n    };\n    setTodos([newTodo, ...todos]);\n  };\n\n  // Toggle todo completion status\n  const toggleTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  // Delete a todo\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // Edit a todo\n  const editTodo = (id, updates) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      ...updates\n    } : todo));\n  };\n\n  // Clear completed todos\n  const clearCompleted = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  // Get filtered todos\n  const getFilteredTodos = () => {\n    let filteredTodos = [...todos];\n\n    // Apply filter\n    if (filter === 'active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    } else if (filter === 'completed') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n\n    // Apply sort\n    if (sort === 'date') {\n      filteredTodos.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n    } else if (sort === 'priority') {\n      const priorityOrder = {\n        high: 1,\n        medium: 2,\n        low: 3\n      };\n      filteredTodos.sort((a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]);\n    } else if (sort === 'dueDate') {\n      filteredTodos.sort((a, b) => {\n        // Null due dates go to the end\n        if (!a.dueDate) return 1;\n        if (!b.dueDate) return -1;\n        return new Date(a.dueDate) - new Date(b.dueDate);\n      });\n    } else if (sort === 'alphabetical') {\n      filteredTodos.sort((a, b) => a.text.localeCompare(b.text));\n    }\n    return filteredTodos;\n  };\n\n  // Get counts for active and completed todos\n  const getCounts = () => {\n    const active = todos.filter(todo => !todo.completed).length;\n    const completed = todos.filter(todo => todo.completed).length;\n    return {\n      active,\n      completed,\n      total: todos.length\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: {\n      todos: getFilteredTodos(),\n      filter,\n      sort,\n      counts: getCounts(),\n      setFilter,\n      setSort,\n      addTodo,\n      toggleTodo,\n      deleteTodo,\n      editTodo,\n      clearCompleted\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s2(TodoProvider, \"Sy6ISkCNK7OTsrwZZ083zPuVKeo=\");\n_c = TodoProvider;\nexport default TodoContext;\nvar _c;\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","TodoContext","useTodo","_s","TodoProvider","children","_s2","todos","setTodos","filter","setFilter","sort","setSort","storedTodos","localStorage","getItem","JSON","parse","id","text","completed","priority","dueDate","Date","now","toISOString","createdAt","setItem","stringify","addTodo","newTodo","toString","toggleTodo","map","todo","deleteTodo","editTodo","updates","clearCompleted","getFilteredTodos","filteredTodos","a","b","priorityOrder","high","medium","low","localeCompare","getCounts","active","length","total","Provider","value","counts","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/neuralnotes/src/contexts/TodoContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst TodoContext = createContext();\n\nexport const useTodo = () => useContext(TodoContext);\n\nexport const TodoProvider = ({ children }) => {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all'); // all, active, completed\n  const [sort, setSort] = useState('date'); // date, priority, alphabetical\n\n  // Load todos from localStorage on initial render\n  useEffect(() => {\n    const storedTodos = localStorage.getItem('neuralnotes_todos');\n    if (storedTodos) {\n      setTodos(JSON.parse(storedTodos));\n    } else {\n      // Sample todos for first-time users\n      setTodos([\n        {\n          id: '1',\n          text: 'Welcome to NeuralNotes Todo List',\n          completed: false,\n          priority: 'high',\n          dueDate: new Date(Date.now() + 86400000).toISOString(), // tomorrow\n          createdAt: new Date().toISOString()\n        },\n        {\n          id: '2',\n          text: 'Try adding a new task',\n          completed: false,\n          priority: 'medium',\n          dueDate: new Date(Date.now() + 172800000).toISOString(), // day after tomorrow\n          createdAt: new Date().toISOString()\n        },\n        {\n          id: '3',\n          text: 'Mark tasks as complete',\n          completed: true,\n          priority: 'low',\n          dueDate: null,\n          createdAt: new Date().toISOString()\n        }\n      ]);\n    }\n  }, []);\n\n  // Save todos to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('neuralnotes_todos', JSON.stringify(todos));\n  }, [todos]);\n\n  // Add a new todo\n  const addTodo = (text, priority = 'medium', dueDate = null) => {\n    const newTodo = {\n      id: Date.now().toString(),\n      text,\n      completed: false,\n      priority,\n      dueDate,\n      createdAt: new Date().toISOString()\n    };\n    \n    setTodos([newTodo, ...todos]);\n  };\n\n  // Toggle todo completion status\n  const toggleTodo = (id) => {\n    setTodos(\n      todos.map(todo =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  // Delete a todo\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // Edit a todo\n  const editTodo = (id, updates) => {\n    setTodos(\n      todos.map(todo =>\n        todo.id === id ? { ...todo, ...updates } : todo\n      )\n    );\n  };\n\n  // Clear completed todos\n  const clearCompleted = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  // Get filtered todos\n  const getFilteredTodos = () => {\n    let filteredTodos = [...todos];\n    \n    // Apply filter\n    if (filter === 'active') {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    } else if (filter === 'completed') {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n    \n    // Apply sort\n    if (sort === 'date') {\n      filteredTodos.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n    } else if (sort === 'priority') {\n      const priorityOrder = { high: 1, medium: 2, low: 3 };\n      filteredTodos.sort((a, b) => priorityOrder[a.priority] - priorityOrder[b.priority]);\n    } else if (sort === 'dueDate') {\n      filteredTodos.sort((a, b) => {\n        // Null due dates go to the end\n        if (!a.dueDate) return 1;\n        if (!b.dueDate) return -1;\n        return new Date(a.dueDate) - new Date(b.dueDate);\n      });\n    } else if (sort === 'alphabetical') {\n      filteredTodos.sort((a, b) => a.text.localeCompare(b.text));\n    }\n    \n    return filteredTodos;\n  };\n\n  // Get counts for active and completed todos\n  const getCounts = () => {\n    const active = todos.filter(todo => !todo.completed).length;\n    const completed = todos.filter(todo => todo.completed).length;\n    return { active, completed, total: todos.length };\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        todos: getFilteredTodos(),\n        filter,\n        sort,\n        counts: getCounts(),\n        setFilter,\n        setSort,\n        addTodo,\n        toggleTodo,\n        deleteTodo,\n        editTodo,\n        clearCompleted\n      }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n\nexport default TodoContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}